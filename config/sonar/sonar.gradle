apply plugin: "org.sonarqube"

def branch = System.getenv("CIRCLE_BRANCH")
def prUrl = System.getenv("CIRCLE_PULL_REQUEST")

static boolean isNullOrBlank(String value) {
    return value == null || value.isBlank()
}

sonarqube {
    // androidVariant "devDebug"

    properties {
        property "sonar.projectKey", System.getenv("SONAR_PROJECT_KEY")
        property "sonar.organization", System.getenv("SONAR_ORGANIZATION")

        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.token", System.getenv("SONAR_TOKEN")

        if (!isNullOrBlank(branch) && !isNullOrBlank(prUrl)) {
            property "sonar.pullrequest.branch", "$branch"

            int lastSlashIndex = prUrl.lastIndexOf('/')
            String prNumber = prUrl.substring(lastSlashIndex + 1)
            property "sonar.pullrequest.key", prNumber
        }

        property "sonar.sources", "src/main/java"
        property "sonar.tests", ["src/test/java"]
        property "sonar.test.inclusions", "**/*Test*/**"
        property "sonar.java.source", "17"
        property "sonar.sourceEncoding", "UTF-8"

        property "sonar.exclusions", [
                "**/androidTest/**,**/*Test*/**,*.json,**/*test*/**,**/.gradle/**,**/R.class,build/**,**/*.png,**/res/**,**/*Application.ktÂ´"
        ]
        property "sonar.coverage.exclusions", [
                "src/**/webtracker/MainActivity.kt",
                "src/**/webtracker/navigation/**",
                "src/**/webtracker/di/**",
                "src/**/webtracker/application/**",
                "src/**/design_system/**",
                "src/**/core/coroutine/**",
                "src/**/core/navigation/**",
                "src/**/core/util/**",
                "src/**/core/**",
                "src/**/ui/components/**",
                "src/**/ui/**",
                "src/**/*Application.kt",
                "src/**/*Activity.kt",
                "src/**/*Module.kt",
                "src/**/*Dialog.kt",
                "src/**/*Adapter.kt",
                "src/**/*Delegate.kt",
                "src/**/App.kt",
                "src/**/*Extensions.kt",
                "src/**/*Extension.kt",
                "src/**/converters/**",
                "src/**/*Constants.kt",
                "src/**/*DataSource.kt",
                "src/**/common/metadata-db/**",
                "src/**/*Injection.kt",
                "src/**/*FlagsImpl.kt",
                "src/**/*DataHolder.kt",
                "src/**/DialogTemplates.kt",
                "src/**/*Dto.kt",
                "src/**/*Dao.kt",
                "src/**/*Screen.kt",
                "src/**/model/**",
                "src/**/models/**",
                "src/**/*View.kt",
                "src/**/*Layout.kt",
                "src/**/viewholders/**",
                "src/**/screens/**",
                "src/**/migrations/**",
                "src/**/*DAO.kt",
                "src/**/utils/**",
                "src/**/RawTrackingDataReader.kt",
                "src/**/authentication_data/**",
                "src/**/authentication_domain/di/**",
                "src/**/authentication_presentation/events/**",
                "src/**/authentication_presentation/state/**",
                "src/**/authentication_presentation/ui/**",
                "src/**/identification_presentation/events/**",
                "src/**/identification_presentation/state/**",
                "src/**/identification_presentation/ui/**",
                "src/**/identification_presentation/state/**" ,
                "src/**/identification_presentation/events/**" ,
                "src/**/*Test*/**",
                "src/**/androidTest/**/*",
                "src/**/test/**/*",
                "src/**/utils/database/*Dao*",
                "src/**/core/database/*Database*",
                "src/**/authentication_data/database/OrganizationDao*",
                "src/**/authentication_data/mapper/OrganizationMapper*",
                "src/**/map_presentation/ui/**"
        ]

        property "sonar.report.export.path", "sonar-report.json"
        property "sonar.issuesReport.json.enable", "true"
        property "sonar.import_unknown_files", true
        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", [
                "**/build/reports/jacoco/jacocoTestReport-staging-unified/jacocoTestReport-staging-unified.xml",
        ]
    }
}
