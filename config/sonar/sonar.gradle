apply plugin: "org.sonarqube"

def branch = System.getenv("CIRCLE_BRANCH")
def prUrl = System.getenv("CIRCLE_PULL_REQUEST")

static boolean isNullOrBlank(String value) {
    return value == null || value.isBlank()
}

sonarqube {
    // androidVariant "devDebug"

    properties {
        property "sonar.projectKey", System.getenv("SONAR_PROJECT_KEY")
        property "sonar.organization", System.getenv("SONAR_ORGANIZATION")

        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.token", System.getenv("SONAR_TOKEN")

        if (!isNullOrBlank(branch) && !isNullOrBlank(prUrl)) {
            property "sonar.pullrequest.branch", "$branch"

            int lastSlashIndex = prUrl.lastIndexOf('/')
            String prNumber = prUrl.substring(lastSlashIndex + 1)
            property "sonar.pullrequest.key", prNumber
        }

        property "sonar.sources", "src/main/java"
        property "sonar.tests", ["src/test/java"]
        property "sonar.test.inclusions", "**/*Test*/**"
        property "sonar.java.source", "17"
        property "sonar.sourceEncoding", "UTF-8"

        property "sonar.exclusions", [
                "**/androidTest/**,**/*Test*/**,*.json,**/*test*/**,**/.gradle/**,**/R.class,build/**,**/*.png,**/res/**,**/*Application.ktÂ´"
        ]
        property "sonar.coverage.exclusions", [
                "**/webtracker/MainActivity.kt",
                "**/webtracker/navigation/**",
                "**/webtracker/di/**",
                "**/webtracker/application/**",
                "**/design_system/**",
                "**/core/coroutine/**",
                "**/core/navigation/**",
                "**/core/util/**",
                "**/authentication_presentation/events/**",
                "**/authentication_presentation/state/**",
                "**/authentication_presentation/ui/**",
                "**/*Test*/**",
                "**/androidTest/**/*",
                "**/test/**/*"
        ]

        property "sonar.report.export.path", "sonar-report.json"
        property "sonar.issuesReport.json.enable", "true"
        property "sonar.import_unknown_files", true
        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", [
                "**/build/reports/jacoco/jacocoTestReport-staging-unified/jacocoTestReport-staging-unified.xml",
        ]
    }
}
